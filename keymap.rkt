#lang racket/gui
(provide bqn-keymap)
(define key-dict
  #hash(
   (#\~ . #\¬)     (#\` . #\˜)
   (#\! . #\⎉)     (#\1 . #\˘)
   (#\@ . #\⚇)     (#\2 . #\¨)
   (#\# . #\⍟)     (#\3 . #\⁼)
   (#\$ . #\◶)     (#\4 . #\⌜)
   (#\% . #\⊘)     (#\5 . #\´)
   (#\^ . #\⎊)     (#\6 . #\˝)
                   (#\8 . #\∞)
   (#\( . #\⟨)     (#\9 . #\¯)
   (#\) . #\⟩)     (#\0 . #\•)   
   (#\_ . #\√)     (#\- . #\÷)
   (#\+ . #\⋆)     (#\= . #\×)
                   (#\q . #\⌽)
   ("s:W" . #\𝕎)   (#\w . #\𝕨)
   ("s:E" . #\⍷)   (#\e . #\∊)
   ("s:R" . #\𝕣)   (#\r . #\↑)
   ("s:T" . #\⍋)   (#\t . #\∧)
                   (#\u . #\⊔)
   ("s:I" . #\⊑)   (#\i . #\⊏)
   ("s:O" . #\⊒)   (#\o . #\⊐)
   ("s:P" . #\⍳)   (#\p . #\π)
                   (#\a . #\⍉)
   ("s:S" . #\𝕊)   (#\s . #\𝕤)
                   (#\d . #\↕)
   ("s:F" . #\𝔽)   (#\f . #\𝕗)
   ("s:G" . #\𝔾)   (#\g . #\𝕘)
   ("s:H" . #\«)   (#\h . #\⊸)
                   (#\j . #\∘)
   ("s:K" . #\⌾)   (#\k . #\○)
   ("s:L" . #\»)   (#\l . #\⟜)
   ("s:Z" . #\⋈)   (#\z . #\⥊)
   ("s:X" . #\𝕏)   (#\x . #\𝕩)
                   (#\c . #\↓)
   ("s:V" . #\⍒)   (#\v . #\∨)
   ("s:B" . #\⌈)   (#\b . #\⌊)
   ("s:M" . #\≢)   (#\m . #\≡)
   (#\{ . #\⊣)     (#\[ . #\←)
   (#\} . #\⊢)     (#\] . #\→)
   ("colon" . #\·) ("semicolon" . #\⋄)
   (#\" . #\˙)     (#\' . #\↩)
   (#\< . #\≤)     (#\, . #\∾)
   (#\> . #\≥)     (#\. . #\≍)
   (#\? . #\⇐)     (#\/ . #\≠)
   ( "space"    .      #\‿   )
   ))

(define bqn-keymap (new keymap%))

(for ([(in out) (in-hash key-dict)])
     (let ([name (string out)]
           [func (lambda (text event)
                   (when (is-a? text text%)
                     (send text insert out)))])
       (begin
         (send bqn-keymap add-function name func)
         (send bqn-keymap map-function (~a "\\;" in) name))))